function [blockOnset, cond, condName, code] = import_flocData (filename)
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /Users/slab_laptop2/Documents/GabrielP/mri_analysis/scripts/101_07-Mar-2018_1back_1runs_fLoc_run1.par
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2018/03/11 15:35:56

%% Initialize variables.
%filename = '/Users/slab_laptop2/Documents/GabrielP/mri_analysis/scripts/101_07-Mar-2018_1back_1runs_fLoc_run1.par';
delimiter = '\t';

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: text (%s)
%	column4: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
blockOnset = dataArray{:, 1};
cond = dataArray{:, 2};
condName = dataArray{:, 3};
code = dataArray{:, 4};


%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans;

end